#!/usr/bin/env bash

#PBS -l walltime=48:0:0
#PBS -r n
#PBS -j oe
#PBS -W umask=002

umask 002

#-----------------------------------------------------#
#                                                     #
# INITIALIZE VARIABLES                                #
#                                                     #
#-----------------------------------------------------#
if [[ -z $SAMPLE ]]; then echo "ERROR: you must supply SAMPLE variable as -v to qsub"; exit 42; fi
if [[ -z $DIR ]]; then echo "ERROR: you must supply DIR variable as -v to qsub"; exit 42; fi
if [[ -z $THREADS ]]; then echo "ERROR: you must supply THREADS variable as -v to qsub"; exit 42; fi
#if [[ -z $MAX_MEM ]]; then echo "ERROR: you must supply MiAX_MEM variable as -v to qsub"; exit 42; fi
if [[ -z $PIPELINE_HOME ]]; then echo "ERROR: you must supply PIPELINE_HOME variable as -v to qsub"; exit 42; fi
if [[ -z $ALIGNED_BAM ]]; then echo "ERROR: you must supply ALIGNED_BAM variable as -v to qsub"; exit 42; fi
if [[ -z $USE_INDELS ]]; then echo "ERROR: you must supply USE_INDELS variable as -v to qsub"; exit 42; fi
if [[ -z $GENOME ]]; then echo "ERROR: you must supply GENOME variable as -v to qsub"; exit 42; fi
if [[ -z $CENTER ]]; then echo "ERROR: you must supply CENTER variable as -v to qsub"; exit 42; fi
if [[ -z $DONE ]]; then echo "ERROR: you must supply DONE variable as -v to qsub"; exit 42; fi
if [[ -z $SFS ]]; then export SFS=0; fi
if [[ -z $KEEP_INTERMEDIATES ]]; then export KEEP_INTERMEDIATES=0; fi

echo "***********************************************************"
echo "* pipeline.exome.part_2_1.GATK_data_processing.in_bam.qsub"
echo "***********************************************************"
echo "* SAMPLE:             $SAMPLE"
echo "* DIR:                $DIR"
echo "* THREADS:            $THREADS"
#echo "* MAX_MEM:            $MAX_MEM"
echo "* PIPELINE_HOME:      $PIPELINE_HOME"
echo "* ALIGNED_BAM:        $ALIGNED_BAM"
echo "* USE_INDELS:         $USE_INDELS"
echo "* GENOME:             $GENOME"
echo "* CENTER:             $CENTER"
echo "* SFS                 $SFS"
echo "* KEEP_INTERMEDIATES: $KEEP_INTERMEDIATES"
echo "* VERBOSE             $VERBOSE"
echo "* DONE:               $DONE"
echo "***********************************************************"

#-----------------------------------------------------#
#                                                     #
# START PIPELINE                                      #
#                                                     #
#-----------------------------------------------------#
cd $DIR
# INIT PIPELINE VARIABLES
. $PIPELINE_HOME/data/templates/init_pipeline.sh $PIPELINE_HOME
# DEFINING PIPELINE SPECIFIC VARIABLES
# LOAD FUNCTION LIBRARY
. $PIPELINE_HOME/data/templates/function.library
# INIT THE SAMPLE
set_verbose $VERBOSE
sample_init $SAMPLE $DIR
if [ $FUNCTION_LIBRARY_INIT -ne 1 ]; then echo "INIT SAMPLE PROBLEM"; exit 42; fi

if [[ $GENOME == "v37" ]]; then PREFIX=$GATK_EXOME_PREFIX; REFERENCE=$REF;
elif [[ $GENOME == "MT" ]]; then PREFIX=$GATK_MT_PREFIX; REFERENCE=$REF_MT;
else echo "Unkown GENOME to use: \"$GENOME\""; exit 42; fi

##########################################
## FULL PIPELINE - EXOME
echo "*** STARTING EXOME PIPELINE"
##########################################
cd $DIR

## ALIGNMENTS exome
if [ $VERBOSE ]; then echo "****** CMD: sample_GATK_data_processing_noalign $ALIGNED_BAM $PREFIX $REFERENCE $USE_INDELS $SFS $KEEP_INTERMEDIATES"; fi
sample_GATK_data_processing_noalign $ALIGNED_BAM $PREFIX $REFERENCE $USE_INDELS $SFS $KEEP_INTERMEDIATES
if [ $? -eq 0 ]; then 
  if [[ $KEEP_INTERMEDIATES -eq 0 ]]; then rm -fv $ALIGNED_BAM ${ALIGNED_BAM}.bai; fi
  touch $DONE; 
  if [ $VERBOSE ]; then echo SUCCESS; fi; 
  else exit 42; 
fi
