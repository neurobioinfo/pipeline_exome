#!/usr/bin/env bash

#PBS -l walltime=168:0:0
#PBS -r n
#PBS -j oe
#PBS -W umask=002

umask 002

#-----------------------------------------------------#
#                                                     #
# INITIALIZE VARIABLES                                #
#                                                     #
#-----------------------------------------------------#
if [[ -z $SAMPLE ]]; then echo "ERROR: you must supply SAMPLE variable as -v to qsub"; exit 42; fi
if [[ -z $DIR ]]; then echo "ERROR: you must supply DIR variable as -v to qsub"; exit 42; fi
if [[ -z $THREADS ]]; then echo "ERROR: you must supply THREADS variable as -v to qsub"; exit 42; fi
#if [[ -z $MAX_MEM ]]; then echo "ERROR: you must supply MAX_MEM variable as -v to qsub"; exit 42; fi
if [[ -z $PIPELINE_HOME ]]; then echo "ERROR: you must supply PIPELINE_HOME variable as -v to qsub"; exit 42; fi
if [[ -z $ENCODING ]]; then echo "ERROR: you must supply ENCODING variable as -v to qsub"; exit 42; fi
if [[ -z $FASTQ1 ]]; then echo "ERROR: you must supply FASTQ1 variable as -v to qsub"; exit 42; fi
if [[ -z $FASTQ2 ]]; then echo "ERROR: you must supply FASTQ2 variable as -v to qsub"; exit 42; fi
if [[ -z $TRIM_PAIRED_FASTQ1 ]]; then echo "ERROR: you must supply TRIM_PAIRED_FASTQ1 variable as -v to qsub"; exit 42; fi
if [[ -z $TRIM_PAIRED_FASTQ2 ]]; then echo "ERROR: you must supply TRIM_PAIRED_FASTQ2 variable as -v to qsub"; exit 42; fi
if [[ -z $TRIM_UNPAIRED_FASTQ1 ]]; then echo "ERROR: you must supply TRIM_UNPAIRED_FASTQ1 variable as -v to qsub"; exit 42; fi
if [[ -z $TRIM_UNPAIRED_FASTQ2 ]]; then echo "ERROR: you must supply TRIM_UNPAIRED_FASTQ2 variable as -v to qsub"; exit 42; fi
if [[ -z $FASTQC_OUTPUT_DIR ]]; then echo "ERROR: you must supply FASTQC_OUTPUT_DIR variable as -v to qsub"; exit 42; fi
if [[ -z $DONE ]]; then echo "ERROR: you must supply DONE variable as -v to qsub"; exit 42; fi
if [[ -z $SFS ]]; then export SFS=0; fi

echo "*******************************************"
echo "* pipeline.exome.part_0_1.trimmomatic.qsub"
echo "*******************************************"
echo "* SAMPLE:               $SAMPLE"
echo "* DIR:                  $DIR"
echo "* THREADS:              $THREADS"
#echo "* MAX_MEM:              $MAX_MEM"
echo "* PIPELINE_HOME:        $PIPELINE_HOME"
echo "* ENCODING:             $ENCODING"
echo "* ADAPTERS:             $ADAPTERS"
echo "* FASTQ1:               $FASTQ1"
echo "* FASTQ2:               $FASTQ2"
echo "* TRIM_PAIRED_FASTQ1:   $TRIM_PAIRED_FASTQ1"
echo "* TRIM_PAIRED_FASTQ2:   $TRIM_PAIRED_FASTQ2"
echo "* TRIM_UNPAIRED_FASTQ1: $TRIM_UNPAIRED_FASTQ1"
echo "* TRIM_UNPAIRED_FASTQ2: $TRIM_UNPAIRED_FASTQ2"
echo "* CROP_COMMAND:         $CROP_COMMAND"
echo "* FASTQC_OUTPUT_DIR:    $FASTQC_OUTPUT_DIR"
echo "* SFS                   $SFS"
echo "* VERBOSE               $VERBOSE"
echo "* DONE:                 $DONE"
echo "*******************************************"

#-----------------------------------------------------#
# START PIPELINE                                      #
#-----------------------------------------------------#
cd $DIR
# INIT PIPELINE VARIABLES
. $PIPELINE_HOME/data/templates/init_pipeline.sh $PIPELINE_HOME
# DEFINING PIPELINE SPECIFIC VARIABLES
# LOAD FUNCTION LIBRARY
. $PIPELINE_HOME/data/templates/function.library
# INIT THE SAMPLE
set_verbose $VERBOSE
sample_init $SAMPLE $DIR

##########################################
## FULL PIPELINE - EXOME
echo "*** STARTING TRIMMOMATIC"
##########################################
cd $DIR

#execute jobs
unset failure
if [[ $SFS -eq 1 || ! `find ./ -maxdepth 1 -name $DONE` ]]; then
    if [ $VERBOSE ]; then echo "****** CMD: sample_trimmomatic_preprocessing_w_outputs $FASTQ1 $FASTQ2 $TRIM_PAIRED_FASTQ1 $TRIM_PAIRED_FASTQ2 $TRIM_UNPAIRED_FASTQ1 $TRIM_UNPAIRED_FASTQ2 $ENCODING $ADAPTERS $CROP_COMMAND"; fi
    sample_trimmomatic_preprocessing_w_outputs $FASTQ1 $FASTQ2 $TRIM_PAIRED_FASTQ1 $TRIM_PAIRED_FASTQ2 $TRIM_UNPAIRED_FASTQ1 $TRIM_UNPAIRED_FASTQ2 $ENCODING $ADAPTERS $CROP_COMMAND
    if [ $? -eq 0 ]; then echo sub-run sample_trimmomatic_preprocessing_w_outputs SUCCESS; else echo "*** sub-run sample_trimmomatic_preprocessing_w_outputs failed"; failure=1; fi
    
if [ $VERBOSE ]; then echo "****** CMD: sample_fastqc $FASTQ1 $FASTQ2 $TRIM_PAIRED_FASTQ1 $TRIM_PAIRED_FASTQ2 $TRIM_UNPAIRED_FASTQ1 $TRIM_UNPAIRED_FASTQ2 $FASTQC_OUTPUT_DIR"; fi
    sample_fastqc $FASTQ1 $FASTQ2 $TRIM_PAIRED_FASTQ1 $TRIM_PAIRED_FASTQ2 $TRIM_UNPAIRED_FASTQ1 $TRIM_UNPAIRED_FASTQ2 $FASTQC_OUTPUT_DIR
    if [ $? -eq 0 ]; then echo sub-run sample_fastqc SUCCESS; else echo "*** sub-run sample_fastqc failed"; failure=1; fi
else
  if [ $VERBOSE ]; then echo "****** SKIP trimming"; fi
fi

#create .done file for entire VARIANT CALLING AND ANNOTATION step, if all sub-jobs ran successfully
if [ $failure ]; then exit 42; else touch $DONE; if [ $VERBOSE ]; then echo SUCCESS; fi; fi



